// <auto-generated />
using System;
using ContractManager.Infrastructure.Common.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ContractManager.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241208151629_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ContractManager.Domain.Contracts.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Area")
                        .HasPrecision(8, 2)
                        .HasColumnType("float(8)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Equipments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("23ec6bef-77bc-4538-8f65-8eb9d63bf31d"),
                            Area = 12.529999999999999,
                            Code = "EQ001",
                            Name = "Drill Machine"
                        },
                        new
                        {
                            Id = new Guid("14844d9f-0765-420d-90a0-881dcff9a29a"),
                            Area = 15.75,
                            Code = "EQ002",
                            Name = "Lathe Machine"
                        },
                        new
                        {
                            Id = new Guid("04ff5f90-0dc4-4cfa-857b-a32a70daf4be"),
                            Area = 21.510000000000002,
                            Code = "EQ003",
                            Name = "Welding Unit"
                        });
                });

            modelBuilder.Entity("ContractManager.Domain.Contracts.EquipmentPlacementContract", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberOfEquipmentUnits")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductionFacilityId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("ProductionFacilityId");

                    b.ToTable("EquipmentPlacementContracts");
                });

            modelBuilder.Entity("ContractManager.Domain.Contracts.ProductionFacility", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<double>("StandardArea")
                        .HasPrecision(18, 2)
                        .HasColumnType("float(18)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("ProductionFacilities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e04519da-2d70-473a-bfc6-d10f3283490a"),
                            Code = "PF001",
                            Name = "Assembly Plant A",
                            StandardArea = 1000.5
                        },
                        new
                        {
                            Id = new Guid("479c9a2c-40ef-4cae-8273-9e7a7f1cf7be"),
                            Code = "PF002",
                            Name = "Welding Facility B",
                            StandardArea = 850.75
                        },
                        new
                        {
                            Id = new Guid("e9af8048-9514-47d2-a76c-043fbedad8fb"),
                            Code = "PF003",
                            Name = "Machining Center C",
                            StandardArea = 1200.0
                        });
                });

            modelBuilder.Entity("ContractManager.Domain.Contracts.EquipmentPlacementContract", b =>
                {
                    b.HasOne("ContractManager.Domain.Contracts.Equipment", "Equipment")
                        .WithMany("Contracts")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Equipment_Id");

                    b.HasOne("ContractManager.Domain.Contracts.ProductionFacility", "ProductionFacility")
                        .WithMany("Contracts")
                        .HasForeignKey("ProductionFacilityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_ProductionFacility_Id");

                    b.Navigation("Equipment");

                    b.Navigation("ProductionFacility");
                });

            modelBuilder.Entity("ContractManager.Domain.Contracts.Equipment", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("ContractManager.Domain.Contracts.ProductionFacility", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
